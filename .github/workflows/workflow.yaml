name: Python Urbackup CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11, 3.12]

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        run: |
          pip install pytest
          pytest tests/

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'release' || github.event_name == 'pull_request')

    steps:
      - uses: actions/checkout@v4
      
      - name: Bump patch version
        if: github.ref == 'refs/heads/main'
        run: |
          pip install bump2version
          bump2version patch
        env:
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com

      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build package
        run: |
          pip install setuptools wheel
          python setup.py sdist bdist_wheel

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*

  publish-testpypi:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'release' || github.event_name == 'pull_request')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish to TestPyPI
        run: |
          pip install twine
          twine upload --repository testpypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'release' || github.event_name == 'pull_request')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish to PyPI
        run: |
          pip install twine
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
